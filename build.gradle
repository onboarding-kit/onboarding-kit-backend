plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.jetbrains.kotlin.jvm' version '1.9.24' // todo. 코틀린 추가
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.24' // todo. 코틀린 스프링 추가
    id("org.jetbrains.kotlin.plugin.jpa") version "1.9.24" // todo. 코틀린 JPA 추가
}

group = 'com.api'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.jetbrains.kotlin:kotlin-stdlib" // todo. jvm 맞춤 코틀린
    implementation "org.jetbrains.kotlin:kotlin-reflect" // todo. 코틀린 리플렉션 추가
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2:2.2.224'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "17"
        freeCompilerArgs = ["-Xjsr305=strict"]
    }
}

tasks.withType(Test).configureEach {
    enabled = false
}